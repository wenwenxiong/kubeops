---
  # kubelet
  - name: create {{ kubernetes_install_dir }} directory
    file:
      path: "{{ kubernetes_install_dir }}"
      state: directory

  - name: copy cloud-provider.conf to remote
    copy:
      src: "{{ cloud_config_local }}"
      dest: "{{ cloud_config }}"
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kubernetes_service_mode }}"
    when: cloud_config != ''

  - name: create {{ network_plugin_dir }} directory
    file:
      path: "{{ network_plugin_dir }}"
      state: directory

  - name: copy kubelet.service to remote
    template:
      src: kubelet.service
      dest: "{{ init_system_dir }}/kubelet.service"
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kubernetes_service_mode }}"
    notify:
      - reload services
      - restart kubelet service

  - name: copy kubelet kubeconfig
    template:
      src: kubeconfig.j2
      dest: "{{ kubernetes_kubeconfig.kubelet }}"
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kubernetes_service_mode }}"

  - name: create static pod manifests directory
    file:
      path: "{{ kubelet_pod_manifests_dir }}"
      state: directory
      mode: 0700

  # force_kubelet_restart=true to force restart
  # on install, service will be started with the task before this
  # on upgrade, this will be restarted only of the package was upgraded
  - name: force restart kubelet
    command: /bin/true
    notify:
      - reload services
      - restart kubelet service
    when: >
      (force_kubelet_restart is defined and force_kubelet_restart|bool == true) or
      ((upgrading is defined and upgrading|bool == true) and
      (allow_package_installation|bool == false or
      ((kubelet_installation_rpm is defined and kubelet_installation_rpm.changed == true) or
      (kubelet_installation_deb is defined and kubelet_installation_deb.changed == true))))

  - meta: flush_handlers  #Run handlers

  - name: verify kubelet is running
    command: systemctl status kubelet
    register: running
    until: running|success
    retries: 3
    delay: 5
