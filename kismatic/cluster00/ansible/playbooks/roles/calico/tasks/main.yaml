---
  - name: create /etc/calico directory
    file:
      path: "{{ calico_dir }}"
      state: directory
  
  - name: copy rbac.yaml to remote
    template:
      src: rbac.yaml
      dest: /etc/calico/rbac.yaml
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kubernetes_service_mode }}"

  - name: copy calico.yaml to remote
    template:
      src: calico.yaml
      dest: /etc/calico/calico.yaml
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kubernetes_service_mode }}"

  - name: create {{ calico_dir }} directory
    file:
      path: "{{ calico_dir }}"
      state: directory
  - name: copy calicoctl.cfg to remote
    template:
      src: calicoctl.cfg
      dest: "{{ calicoctl_conf_path }}"
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ network_environment_mode }}"

  - name: create calico RBAC roles
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} apply -f /etc/calico/rbac.yaml
    run_once: true

  - name: get the name of the calico pod running on this node
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} get pods -l=k8s-app=calico-node --template {%raw%}'{{range .items}}{{if eq .spec.nodeName{%endraw%} "{{ inventory_hostname|lower }}"{%raw%}}}{{.metadata.name}}{{"\n"}}{{end}}{{end}}'{%endraw%} -n kube-system
    register: calico_pod_name
    when: upgrading is defined and upgrading|bool == true

  - name: start calico containers
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} apply -f /etc/calico/calico.yaml
    run_once: true

  - name: delete calico pod running on this node
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} delete pod {{ calico_pod_name.stdout }} -n kube-system --now
    when: calico_pod_name is defined and calico_pod_name.stdout is defined and calico_pod_name.stdout != ""

    # wait for pod to shutdown
  - name: wait until the calico pod running on this node is deleted
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} get pods {{ calico_pod_name.stdout }} --ignore-not-found=true -n kube-system
    register: poddeleted
    until: poddeleted|success and poddeleted.stdout == ""
    retries: 20
    delay: 6
    when: calico_pod_name is defined and calico_pod_name.stdout is defined and calico_pod_name.stdout != ""
