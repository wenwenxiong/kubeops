---
  - name: create /etc/kubernetes/specs directory
    file:
      path: "{{ kubernetes_spec_dir }}"
      state: directory

  
  - name: copy nginx-ingress-rbac.yaml to remote
    template:
      src: nginx-ingress-rbac.yaml
      dest: "{{ kubernetes_spec_dir }}/nginx-ingress-rbac.yaml"
  - name: create nginx-ingress-rbac resources
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} apply -f {{ kubernetes_spec_dir }}/nginx-ingress-rbac.yaml

  - name: copy default-backend.yaml to remote
    template:
      src: default-backend.yaml
      dest: "{{ kubernetes_spec_dir }}/default-backend.yaml"

  - name: get the name of the default-backend pod running on this node
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} get pods -l=name=default-http-backend --template {%raw%}'{{range .items}}{{if eq .spec.nodeName{%endraw%} "{{ inventory_hostname|lower }}"{%raw%}}}{{.metadata.name}}{{"\n"}}{{end}}{{end}}'{%endraw%} -n kube-system
    register: pod_name
    when: upgrading is defined and upgrading|bool == true

  - name: start default-backend serivce
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} apply -f {{ kubernetes_spec_dir }}/default-backend.yaml

  - name: delete default-backend pod running on this node
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} delete pod {{ pod_name.stdout }} -n kube-system --now
    when: pod_name is defined and pod_name.stdout is defined and pod_name.stdout != ""

  - name: copy nginx-ingress-controller.yaml to remote
    template:
      src: nginx-ingress-controller.yaml
      dest: "{{ kubernetes_spec_dir }}/nginx-ingress-controller.yaml"

  - name: get the name of the ingress pod running on this node
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} get pods -l=name=ingress --template {%raw%}'{{range .items}}{{if eq .spec.nodeName{%endraw%} "{{ inventory_hostname|lower }}"{%raw%}}}{{.metadata.name}}{{"\n"}}{{end}}{{end}}'{%endraw%} -n kube-system
    register: pod_name
    when: upgrading is defined and upgrading|bool == true

  - name: start nginx-ingress-controller serivce
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} apply -f {{ kubernetes_spec_dir }}/nginx-ingress-controller.yaml
    register: out

  - name: delete ingress pod running on this node
    command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} delete pod {{ pod_name.stdout }} -n kube-system --now
    when: pod_name is defined and pod_name.stdout is defined and pod_name.stdout != ""

  - block:
    - name: get the name of the ingress pod running on this node
      command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} get pods -l=name=ingress --template {%raw%}'{{range .items}}{{if eq .spec.nodeName{%endraw%} "{{ inventory_hostname|lower }}"{%raw%}}}{{.metadata.name}}{{"\n"}}{{end}}{{end}}'{%endraw%} -n kube-system
      register: pod_name
      until: pod_name is defined and pod_name.stdout is defined and pod_name.stdout != ""
      retries: 20
      delay: 6

    - name: wait until pod is in "Running" state
      command: kubectl --kubeconfig {{ kubernetes_kubeconfig.kubectl }} get pods {{ pod_name.stdout }} -o=jsonpath='{.status.phase}' -n kube-system
      register: readyPods
      until: readyPods.stdout == "Running"
      retries: 20
      delay: 6
    when: run_pod_validation|bool == true
