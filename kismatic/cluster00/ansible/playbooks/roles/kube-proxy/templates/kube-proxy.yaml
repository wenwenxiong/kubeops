apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-proxy
  namespace: kube-system
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: system:kube-proxy
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:node-proxier
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: kube-proxy
  annotations:
    version: "{{ official_images.kube_apiserver.version }}"
    kismatic/version: "{{ kismatic_short_version }}"
  name: kube-proxy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: kube-proxy
      annotations:
        version: "{{ official_images.kube_apiserver.version }}"
        kismatic/version: "{{ kismatic_short_version }}"
        k8s-app: kube-proxy
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      nodeSelector:
        kismatic/kube-proxy: "true"
      tolerations:
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: kube-proxy
        image: {{ images.kube_proxy }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
        command:
        - kube-proxy
{% set combined_options = kube_proxy_option_defaults | combine(kube_proxy_option_overrides) -%}
{% for option in combined_options | dictsort %}
{% if option[1] is defined and option[1] | string | length > 0 %}
        - "--{{ option[0] }}={{ option[1] }}"
{% endif %}
{% endfor %}
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: "{{ kubernetes_load_balanced_fqdn }}"
        - name: KUBERNETES_SERVICE_PORT
          value: "{{ kubernetes_master_secure_port }}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 10256
          initialDelaySeconds: 15
          timeoutSeconds: 15
          failureThreshold: 8
        volumeMounts:
        - mountPath: /var/log
          name: varlog
          readOnly: false
        - mountPath: /run/xtables.lock
          name: xtables-lock
          readOnly: false
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: lib-modules
        hostPath:
          path: /lib/modules
      serviceAccountName: kube-proxy